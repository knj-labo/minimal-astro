---
import Layout from '../../components/Layout.astro';
import ShareButton from '../../components/ShareButton.svelte';
import Counter from '../../components/Counter.jsx';
import { getCollection, getEntry } from 'minimal-astro/content';

export async function getStaticPaths() {
  const posts = await getCollection('post');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

const author = await getEntry('authors', post.data.author);
const formattedDate = new Date(post.data.date).toLocaleDateString('ja-JP', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Layout title={post.data.title} description={post.data.description}>
  <article>
    <header class="post-header">
      <h1>{post.data.title}</h1>
      <div class="post-meta">
        <time datetime={post.data.date.toISOString()}>{formattedDate}</time>
        {author && (
          <div class="author">
            <img src={author.data.avatar} alt={author.data.name} />
            <span>by {author.data.name}</span>
          </div>
        )}
      </div>
      {post.data.tags && (
        <div class="tags">
          {post.data.tags.map(tag => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </header>

    <div class="post-content">
      <Content />
    </div>

    <div class="post-actions">
      <ShareButton 
        title={post.data.title}
        url={`/post/${post.slug}`}
        client:visible
      />
    </div>

    {post.slug === 'islands-architecture' && (
      <div class="demo-section">
        <h3>Try the Interactive Demo</h3>
        <p>This React counter demonstrates Islands Architecture - it's only hydrated when needed:</p>
        <Counter client:load />
      </div>
    )}
  </article>
</Layout>

<style>
  article {
    max-width: 800px;
    margin: 0 auto;
  }

  .post-header {
    margin-bottom: 3rem;
  }

  .post-header h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  .post-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
    color: #666;
    margin-bottom: 1rem;
  }

  .author {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .author img {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
  }

  .tag {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    background: #e5e7eb;
    border-radius: 9999px;
    font-size: 0.875rem;
    color: #4b5563;
  }

  .post-content {
    font-size: 1.125rem;
    line-height: 1.75;
    margin-bottom: 3rem;
  }

  .post-content :global(h1),
  .post-content :global(h2),
  .post-content :global(h3) {
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  .post-content :global(p) {
    margin-bottom: 1.5rem;
  }

  .post-content :global(pre) {
    background: #1e293b;
    color: #e2e8f0;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin-bottom: 1.5rem;
  }

  .post-content :global(code) {
    background: #e5e7eb;
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }

  .post-content :global(pre code) {
    background: none;
    padding: 0;
  }

  .post-content :global(ul),
  .post-content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .post-content :global(li) {
    margin-bottom: 0.5rem;
  }

  .post-actions {
    padding: 2rem 0;
    border-top: 1px solid #e5e7eb;
    border-bottom: 1px solid #e5e7eb;
  }

  .demo-section {
    background: #f9fafb;
    padding: 2rem;
    border-radius: 0.5rem;
    margin-top: 3rem;
  }

  .demo-section h3 {
    margin-bottom: 1rem;
  }
</style>