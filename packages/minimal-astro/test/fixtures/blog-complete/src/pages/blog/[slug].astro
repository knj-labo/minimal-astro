---
import Layout from '../../components/Layout.astro';
import Counter from '../../components/Counter.jsx';

// In a real implementation, this would use getStaticPaths()
// For testing, we'll handle specific known slugs
export async function getStaticPaths() {
  return [
    { params: { slug: 'first-post' } },
    { params: { slug: 'second-post' } },
    { params: { slug: 'draft-post' } }
  ];
}

const { slug } = Astro.params;

// Simulate content collection entry lookup
const posts = {
  'first-post': {
    title: "Getting Started with Minimal Astro",
    description: "Learn how to build fast, modern websites with our lightweight Astro implementation.",
    publishDate: new Date('2024-01-15'),
    author: "John Doe",
    tags: ["astro", "web-development", "javascript", "getting-started"],
    content: `
      <h1>Getting Started with Minimal Astro</h1>
      
      <p>Welcome to <strong>Minimal Astro</strong>! This is our first blog post demonstrating the capabilities of our lightweight Astro implementation.</p>
      
      <h2>What is Minimal Astro?</h2>
      
      <p>Minimal Astro is a simplified version of the popular Astro framework, designed to demonstrate key concepts like:</p>
      
      <ul>
        <li><strong>Server-Side Rendering (SSR)</strong>: Generate HTML at build time for better performance</li>
        <li><strong>Islands Architecture</strong>: Load JavaScript only when and where needed</li>
        <li><strong>Multi-Framework Support</strong>: Mix React, Vue, and Svelte components</li>
        <li><strong>Content Collections</strong>: Type-safe content management with schema validation</li>
      </ul>
      
      <h2>Getting Started</h2>
      
      <ol>
        <li><strong>Installation</strong>: Clone the repository and install dependencies</li>
        <li><strong>Development</strong>: Run <code>npm run dev</code> to start the development server</li>
        <li><strong>Build</strong>: Run <code>npm run build</code> to generate your static site</li>
      </ol>
      
      <p>This post was written on January 15, 2024. Follow us for more updates!</p>
    `
  },
  'second-post': {
    title: "Advanced Patterns in Minimal Astro",
    description: "Explore advanced techniques for building complex applications with our Astro implementation.",
    publishDate: new Date('2024-02-01'),
    author: "Jane Smith",
    tags: ["astro", "advanced", "patterns", "architecture"],
    content: `
      <h1>Advanced Patterns in Minimal Astro</h1>
      
      <p>This post explores some advanced patterns you can implement with Minimal Astro, including <strong>MDX support</strong> and <strong>component composition</strong>.</p>
      
      <h2>Component Composition</h2>
      
      <p>You can compose complex UIs by combining multiple components:</p>
      
      <pre><code>---
import Layout from '../components/Layout.astro';
import Counter from '../components/Counter.jsx';
---

&lt;Layout title="My App"&gt;
  &lt;Counter client:load /&gt;
&lt;/Layout&gt;</code></pre>
      
      <h2>Performance Considerations</h2>
      
      <p>Choose the right hydration strategy for your components:</p>
      
      <ul>
        <li><code>client:load</code> - Hydrate immediately on page load</li>
        <li><code>client:idle</code> - Hydrate when the browser is idle</li>
        <li><code>client:visible</code> - Hydrate when component comes into view</li>
      </ul>
      
      <p>Happy coding! üöÄ</p>
    `
  },
  'draft-post': {
    title: "This is a Draft Post",
    description: "This post is still in draft mode and should not appear in production builds.",
    publishDate: new Date('2024-03-01'),
    author: "John Doe",
    tags: ["draft", "work-in-progress"],
    content: `
      <h1>Draft Post</h1>
      
      <p>This is a draft post that should not appear in the final build when filtering for published content.</p>
      
      <h2>Testing Draft Filtering</h2>
      
      <p>This post is useful for testing that our content collection filtering works correctly.</p>
    `
  }
};

const post = posts[slug];

if (!post) {
  return Astro.redirect('/404');
}

const formattedDate = new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}).format(post.publishDate);
---

<Layout title={`${post.title} - Test Blog`} description={post.description}>
  <article class="blog-post">
    <header class="post-header">
      <div class="post-breadcrumb">
        <a href="/blog">‚Üê Back to Blog</a>
      </div>
      
      <h1 class="post-title">{post.title}</h1>
      
      <div class="post-meta">
        <span class="post-author">By {post.author}</span>
        <span class="post-date">{formattedDate}</span>
      </div>
      
      <div class="post-tags">
        {post.tags.map(tag => (
          <span class="post-tag" key={tag}>#{tag}</span>
        ))}
      </div>
    </header>

    <div class="post-content">
      <Fragment set:html={post.content} />
    </div>

    <aside class="post-demo">
      <h3>Interactive Demo</h3>
      <p>This page demonstrates dynamic content rendering with an embedded React component:</p>
      
      <Counter 
        client:idle 
        initialCount={10} 
        label="Post Engagement"
        testId="post-counter" 
      />
    </aside>

    <footer class="post-footer">
      <div class="post-navigation">
        <div class="nav-section">
          <h4>Previous Post</h4>
          <p class="nav-placeholder">No previous post</p>
        </div>
        
        <div class="nav-section">
          <h4>Next Post</h4>
          <p class="nav-placeholder">No next post</p>
        </div>
      </div>
      
      <div class="post-sharing">
        <h4>Share this post</h4>
        <div class="sharing-links">
          <button class="share-button" disabled>Twitter</button>
          <button class="share-button" disabled>LinkedIn</button>
          <button class="share-button" disabled>Copy Link</button>
        </div>
      </div>
    </footer>
  </article>
</Layout>

<style>
  .blog-post {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
    line-height: 1.6;
  }
  
  .post-breadcrumb {
    margin-bottom: 2rem;
  }
  
  .post-breadcrumb a {
    color: #3498db;
    text-decoration: none;
    font-weight: 500;
  }
  
  .post-breadcrumb a:hover {
    text-decoration: underline;
  }
  
  .post-header {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid #e1e1e1;
  }
  
  .post-title {
    font-size: 2.5rem;
    color: #2c3e50;
    margin-bottom: 1rem;
    line-height: 1.2;
  }
  
  .post-meta {
    display: flex;
    gap: 2rem;
    margin-bottom: 1.5rem;
    color: #666;
    font-size: 0.95rem;
  }
  
  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .post-tag {
    background: #f1f2f6;
    color: #2f3542;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 500;
  }
  
  .post-content {
    margin-bottom: 3rem;
  }
  
  .post-content h1,
  .post-content h2,
  .post-content h3 {
    color: #2c3e50;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .post-content h1 {
    font-size: 2rem;
  }
  
  .post-content h2 {
    font-size: 1.5rem;
  }
  
  .post-content h3 {
    font-size: 1.25rem;
  }
  
  .post-content p {
    margin-bottom: 1.5rem;
  }
  
  .post-content ul,
  .post-content ol {
    margin-bottom: 1.5rem;
    padding-left: 2rem;
  }
  
  .post-content li {
    margin-bottom: 0.5rem;
  }
  
  .post-content code {
    background: #f8f9fa;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.9rem;
    color: #e83e8c;
  }
  
  .post-content pre {
    background: #f8f9fa;
    padding: 1.5rem;
    border-radius: 8px;
    overflow-x: auto;
    margin-bottom: 1.5rem;
  }
  
  .post-content pre code {
    background: none;
    padding: 0;
    color: #2c3e50;
  }
  
  .post-demo {
    background: #f8f9fa;
    padding: 2rem;
    border-radius: 12px;
    margin-bottom: 3rem;
    text-align: center;
  }
  
  .post-demo h3 {
    color: #2c3e50;
    margin-bottom: 1rem;
  }
  
  .post-demo p {
    color: #666;
    margin-bottom: 1.5rem;
  }
  
  .post-footer {
    border-top: 1px solid #e1e1e1;
    padding-top: 2rem;
  }
  
  .post-navigation {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin-bottom: 2rem;
  }
  
  .nav-section h4 {
    color: #2c3e50;
    margin-bottom: 0.5rem;
    font-size: 1rem;
  }
  
  .nav-placeholder {
    color: #999;
    font-style: italic;
    margin: 0;
  }
  
  .post-sharing {
    text-align: center;
  }
  
  .post-sharing h4 {
    color: #2c3e50;
    margin-bottom: 1rem;
  }
  
  .sharing-links {
    display: flex;
    justify-content: center;
    gap: 1rem;
  }
  
  .share-button {
    padding: 0.75rem 1.5rem;
    background: #3498db;
    color: white;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 500;
    transition: background 0.2s ease;
  }
  
  .share-button:hover:not(:disabled) {
    background: #2980b9;
  }
  
  .share-button:disabled {
    background: #bdc3c7;
    cursor: not-allowed;
  }
  
  @media (max-width: 768px) {
    .post-title {
      font-size: 2rem;
    }
    
    .post-meta {
      flex-direction: column;
      gap: 0.5rem;
    }
    
    .post-navigation {
      grid-template-columns: 1fr;
    }
    
    .sharing-links {
      flex-direction: column;
      align-items: center;
    }
  }
</style>